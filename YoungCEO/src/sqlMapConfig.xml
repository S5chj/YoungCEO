<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration><!-- mybatis配置文件根节点 -->
	<!-- 加载属性文件 -->
	<properties resource="jdbc.properties">
		<!-- properties可以配置一些属性名和属性值 -->
		<!-- <property name="jdbc.password" value="1"/> -->
	</properties>
<!-- 配置mybatis的log实现为LOG4J 后台输出SQL语句-->
    <settings>
        <setting name="logImpl" value="LOG4J"/>
    </settings>
    
<typeAliases>
<!-- 单个别名定义 -->
<!-- <typeAlias type="com.mybatis.model.User" alias="user"/> -->
<!-- 批量定义别名，扫描整个包下的类，别名就是类名 -->
<package name="com.mybatis.model"/><!-- 首字母大小写都可以找到对应的名字 -->
<package name="com.mybatis.vo"/>
</typeAliases>

  <environments default="development">
    <environment id="development">
    <!-- 使用JDBC事务管理，事务是由mybatis控制 -->
      <transactionManager type="JDBC"/>
      <!-- 配置数据源 type polled unpolled jndi(tomcat) -->
      <dataSource type="POOLED">
        <property name="driver" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
      </dataSource>
    </environment>
  </environments>
  <mappers>
  		<!--注册mapper.xml文件，指明xml位置，加载单个映射文件 -->
   		<!-- <mapper resource="com/mybatis/mapper/UserMapper.xml" /> -->
   		<!-- class:单个的接口类，
   		需要遵循映射文件规范：mapper.xml和mapper.java接口名称一致，
   		且在一个目录下面
   		mapper代理方法
   		 -->
   		<!-- <mapper class="com.mybatis.mapper.UserMapper"/> -->
   		<!-- 自动扫面整个包下的类 ，加载多个-->
   		<package name="com.mybatis.mapper"/>
   		
  </mappers>
</configuration>